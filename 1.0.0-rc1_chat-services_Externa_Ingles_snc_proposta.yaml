openapi: 3.0.1
info:
  title: Chat Service API
  description: >
    API do Serviço de IA Generativa do SINACOR.


    Oferece recursos para interações de chat, geração de conclusões e
    representações vetoriais (embeddings) utilizando modelos GPT, aplicados a
    dados sobre o SINACOR.
  version: 1.0.0-rc1
servers:
  - url: https://Caminho_backend/api/chat-services/v1
tags:
  - name: Completions
paths:
  /chat/completions:
    post:
      tags:
        - Completions
      summary: Cria uma conclusão de chat
      description: Usado para criar conclusões para mensagens de bate-papo.
      operationId: chatCompletion_Create
      parameters:
        - name: apiVersion
          in: query
          description: Versão da API.
          required: false
          schema:
            type: string
            format: date-time
            description: Versão da API.
            example: "2023-11-01T00:00:00.000Z"
        - name: userId
          in: header
          description: Um identificador exclusivo que representa o usuário.
          required: true
          schema:
            type: string
            format: uuid
            description: User ID.
            example: 1cd209e3-056c-4cd3-bb5f-6c7a32e38f7b
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "201":
          description: Created
          headers:
            x-v:
              description: "Versão da API. Ex: 1.0.0-rc1"
              schema:
                maxLength: 20
                minLength: 9
                type: string
            apimRequestId:
              description: Request ID para fins de resolução de problemas.
              schema:
                type: string
            userId:
              description: Um identificador exclusivo que representa o usuário.
              schema:
                type: string
                format: uuid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errors"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errors"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errors"
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errors"
components:
  schemas:
    errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
    Error:
      required:
        - code
        - detail
        - title
      type: object
      properties:
        code:
          maxLength: 10
          type: string
          description: Código do erro de negócio.
        title:
          maxLength: 100
          type: string
          description: Mensagem sucinta do erro de negócio.
        detail:
          maxLength: 2000
          type: string
          description: Informações complementares a respeito do erro de negócio.
    ChatCompletionRequestCommon:
      type: object
      properties:
        streamIndicator:
          type: boolean
          description: >-
            Se verdadeiro, o fluxo de tokens será enviado à medida que estiverem
            disponíveis.
          default: false
        userId:
          description: Identificador do usuário para fins de monitoramento e segurança.
          type: string
          format: uuid
          example: 1cd209e3-056c-4cd3-bb5f-6c7a32e38f7b
    ChatCompletionRequest:
      required:
        - data
      type: object
      properties:
        data:
          $ref: "#/components/schemas/DataChatCompletionRequest"
    DataChatCompletionRequest:
      required:
        - messages
      type: object
      properties:
        params:
          $ref: "#/components/schemas/ChatCompletionRequestCommon"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
    Message:
      required:
        - roleName
        - messageContent
      type: object
      properties:
        roleName:
          type: string
          maxLength: 9
          description: O papel do autor desta mensagem.
          enum:
            - system
            - user
            - ai
            - assistant
            - tool
        messageContent:
          type: string
          maxLength: 8000
          description: O conteúdo da mensagem (até 8.000 caracteres).
        endTurnIndicator:
          type: boolean
          description: Se a mensagem termina o turno de bate-papo.
    ChatCompletionResponseCommon:
      required:
        - idCompletion
        - objectType
        - createdDateTime
        - usage
      type: object
      properties:
        idCompletion:
          type: string
          maxLength: 36
          description: >-
            Identificador único da conclusão, gerado automaticamente pelo
            sistema.
        objectType:
          type: string
          maxLength: 11
          description: Tipo do objeto gerado pela API. Sempre será "completion".
        createdDateTime:
          type: integer
          format: int32
          minimum: -2147483648
          maximum: 2147483647
          description: >-
            Timestamp UNIX de criação da conclusão. Representa a data e hora
            exatas quando a conclusão foi gerada.
        usage:
          $ref: "#/components/schemas/Usage"
    Usage:
      required:
        - completionTokenCount
        - promptTokenCount
        - totalTokenCount
      type: object
      properties:
        completionTokenCount:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: Número de tokens utilizados na conclusão gerada.
          example: 320
        promptTokenCount:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: Número de tokens utilizados na entrada (prompt).
          example: 2114
        totalTokenCount:
          type: integer
          format: int64
          minimum: 1
          maximum: 9223372036854776000
          description: >-
            Total de tokens utilizados (soma de 'completion_tokens' e
            'prompt_tokens').
          example: 2434
    ChatCompletionChoiceCommon:
      type: object
      properties:
        indexOption:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: Índice da escolha na lista de opções geradas.
        finishReason:
          type: string
          maxLength: 14
          description: >
            Razão do término da resposta. Os valores possíveis incluem:

            - **"stop"**: O serviço gerou uma resposta completa e chegou ao fim
            da mensagem.

            - **"length"**: O serviço parou de gerar a resposta devido ao limite
            de caracteres.

            - **"content_filter"**: A resposta foi interrompida devido a um
            filtro de conteúdo, por exemplo, quando a resposta contém conteúdo
            inapropriado ou indesejado.
          enum:
            - stop
            - length
            - content_filter
    ChatCompletionChoice:
      required:
        - chatCompletionChoiceCommon
        - message
      type: object
      properties:
        chatCompletionChoiceCommon:
          $ref: "#/components/schemas/ChatCompletionChoiceCommon"
        message:
          $ref: "#/components/schemas/Message"
    ChatCompletionResponse:
      required:
        - data
      type: object
      properties:
        data:
          $ref: "#/components/schemas/DataChatCompletionResponse"
    DataChatCompletionResponse:
      type: object
      properties:
        details:
          $ref: "#/components/schemas/ChatCompletionResponseCommon"
        choices:
          type: array
          items:
            $ref: "#/components/schemas/ChatCompletionChoice"
